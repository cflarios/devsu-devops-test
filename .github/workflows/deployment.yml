name: Docker Pipeline

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  DOCKER_IMAGE: cflarios/devsu_devops_assessment

jobs:
  test:
    name: API Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Env file
        env:
          ENV: ${{ secrets.ENV_FILE }}
        run: |
          echo "$ENV" >> .env 
          echo "cat .env"
          cat .env
          echo "ls -a ."
          ls -a .

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test

  build:
    name: Build Docker Image
    needs: test

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Env file
        env:
          ENV: ${{ secrets.ENV_FILE }}
        run: |
          echo "$ENV" >> .env 
          echo "cat .env"
          cat .env
          echo "ls -a ."
          ls -a .

      - name: Install Dependencies
        run: npm install

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: false
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

  deploy:
    name: deploy to cluster
    needs: build

    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Env file
        env:
          ENV: ${{ secrets.ENV_FILE }}
        run: |
          echo "$ENV" >> .env 
          echo "cat .env"
          cat .env
          echo "ls -a ."
          ls -a .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: deploy to cluster
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: -n kube-system set image --record  deployment/api-terraform app=${{ env.DOCKER_IMAGE }}:latest
      
      - name: verify deployment
        uses: steebchen/kubectl@v2.0.0
        with:
          config: ${{ secrets.KUBE_CONFIG_DATA }}
          command: rollout status deployment/api-terraform